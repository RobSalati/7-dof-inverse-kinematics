function [angleTrajectories, velocityTrajectories, accelerationTrajectories] = ...
    designTrajectory(initialAngle, finalAngle, timeRange)

A = [timeRange^5 timeRange^4 timeRange^3;
    5*timeRange^4 4*timeRange^3 3*timeRange^2;
    20*timeRange^3 12*timeRange^2 6*timeRange];  % Matrix to solve polynomial coefficients
t = (0:0.005:timeRange);  % Time matrix (t=0 to t=tf with steps of 5ms)
B = [finalAngle'-initialAngle';zeros(1,7);zeros(1,7)];  % End conditions for trajectory
C = linsolve(A,B)';  % Solve polynomial coefficients
angleTrajectories = C(:,1).*t.^5 + C(:,2).*t.^4 + C(:,3).*t.^3 + initialAngle;
velocityTrajectories = 5*C(:,1).*t.^4 + 4*C(:,2).*t.^3 + 3*C(:,3).*t.^2;
accelerationTrajectories = 20*C(:,1).*t.^3 + 12*C(:,2).*t.^2 + 6*C(:,3).*t;
T = table( ...
    round(angleTrajectories(1,:)',4), ...
    round(angleTrajectories(2,:)',4), ...
    round(angleTrajectories(3,:)',4), ...
    round(angleTrajectories(4,:)',4), ...
    round(angleTrajectories(5,:)',4), ...
    round(angleTrajectories(6,:)',4), ...
    round(angleTrajectories(7,:)',4));
writetable(T,"JointAngles.txt", 'Delimiter', ' ', 'WriteVariableNames',0);
end

